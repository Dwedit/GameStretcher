#pragma once

struct IUnknown;
#define NOMINMAX
#include <Windows.h>

//Function Pointer Typedefs
typedef BOOL(WINAPI* Arc_FUNC)(HDC hdc, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
typedef BOOL(WINAPI* BitBlt_FUNC)(HDC hdc, int x, int y, int cx, int cy, HDC hdcSrc, int x1, int y1, DWORD rop);
typedef BOOL(WINAPI* CancelDC_FUNC)(HDC hdc);
typedef BOOL(WINAPI* Chord_FUNC)(HDC hdc, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
typedef int(WINAPI* ChoosePixelFormat_FUNC)(HDC hdc, CONST PIXELFORMATDESCRIPTOR* ppfd);
typedef HMETAFILE(WINAPI* CloseMetaFile_FUNC)(HDC hdc);
typedef HBITMAP(WINAPI* CreateCompatibleBitmap_FUNC)(HDC hdc, int cx, int cy);
typedef HBITMAP(WINAPI* CreateDiscardableBitmap_FUNC)(HDC hdc, int cx, int cy);
typedef HDC(WINAPI* CreateCompatibleDC_FUNC)(HDC hdc);
typedef HBITMAP(WINAPI* CreateDIBitmap_FUNC)(HDC hdc, CONST BITMAPINFOHEADER* pbmih, DWORD flInit, CONST VOID* pjBits, CONST BITMAPINFO* pbmi, UINT iUsage);
typedef BOOL(WINAPI* DeleteDC_FUNC)(HDC hdc);
typedef int(WINAPI* DescribePixelFormat_FUNC)(HDC hdc, int iPixelFormat, UINT nBytes, LPPIXELFORMATDESCRIPTOR ppfd);
typedef int(WINAPI* DrawEscape_FUNC)(HDC hdc, int iEscape, int cjIn, LPCSTR lpIn);
typedef BOOL(WINAPI* Ellipse_FUNC)(HDC hdc, int left, int top, int right, int bottom);
typedef int(WINAPI* EnumFontFamiliesExA_FUNC)(HDC hdc, LPLOGFONTA lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam, DWORD dwFlags);
typedef int(WINAPI* EnumFontFamiliesExW_FUNC)(HDC hdc, LPLOGFONTW lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam, DWORD dwFlags);
typedef int(WINAPI* EnumFontFamiliesA_FUNC)(HDC hdc, LPCSTR lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam);
typedef int(WINAPI* EnumFontFamiliesW_FUNC)(HDC hdc, LPCWSTR lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam);
typedef int(WINAPI* EnumFontsA_FUNC)(HDC hdc, LPCSTR lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam);
typedef int(WINAPI* EnumFontsW_FUNC)(HDC hdc, LPCWSTR lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam);
typedef int(WINAPI* EnumObjects_FUNC)(HDC hdc, int nType, GOBJENUMPROC lpFunc, LPARAM lParam);
typedef int(WINAPI* Escape_FUNC)(HDC hdc, int iEscape, int cjIn, LPCSTR pvIn, LPVOID pvOut);
typedef int(WINAPI* ExtEscape_FUNC)(HDC hdc, int iEscape, int cjInput, LPCSTR lpInData, int cjOutput, LPSTR lpOutData);
typedef int(WINAPI* ExcludeClipRect_FUNC)(HDC hdc, int left, int top, int right, int bottom);
typedef BOOL(WINAPI* ExtFloodFill_FUNC)(HDC hdc, int x, int y, COLORREF color, UINT type);
typedef BOOL(WINAPI* FillRgn_FUNC)(HDC hdc, HRGN hrgn, HBRUSH hbr);
typedef BOOL(WINAPI* FloodFill_FUNC)(HDC hdc, int x, int y, COLORREF color);
typedef int(WINAPI* GetROP2_FUNC)(HDC hdc);
typedef BOOL(WINAPI* GetAspectRatioFilterEx_FUNC)(HDC hdc, LPSIZE lpsize);
typedef COLORREF(WINAPI* GetBkColor_FUNC)(HDC hdc);
typedef COLORREF(WINAPI* GetDCBrushColor_FUNC)(HDC hdc);
typedef COLORREF(WINAPI* GetDCPenColor_FUNC)(HDC hdc);
typedef int(WINAPI* GetBkMode_FUNC)(HDC hdc);
typedef UINT(WINAPI* GetBoundsRect_FUNC)(HDC hdc, LPRECT lprect, UINT flags);
typedef BOOL(WINAPI* GetBrushOrgEx_FUNC)(HDC hdc, LPPOINT lppt);
typedef BOOL(WINAPI* GetCharWidthA_FUNC)(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
typedef BOOL(WINAPI* GetCharWidthW_FUNC)(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
typedef BOOL(WINAPI* GetCharWidth32A_FUNC)(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
typedef BOOL(WINAPI* GetCharWidth32W_FUNC)(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
typedef BOOL(APIENTRY* GetCharWidthFloatA_FUNC)(HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer);
typedef BOOL(APIENTRY* GetCharWidthFloatW_FUNC)(HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer);
typedef BOOL(APIENTRY* GetCharABCWidthsA_FUNC)(HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC);
typedef BOOL(APIENTRY* GetCharABCWidthsW_FUNC)(HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC);
typedef BOOL(APIENTRY* GetCharABCWidthsFloatA_FUNC)(HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC);
typedef BOOL(APIENTRY* GetCharABCWidthsFloatW_FUNC)(HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC);
typedef int(WINAPI* GetClipBox_FUNC)(HDC hdc, LPRECT lprect);
typedef int(WINAPI* GetClipRgn_FUNC)(HDC hdc, HRGN hrgn);
typedef int(WINAPI* GetMetaRgn_FUNC)(HDC hdc, HRGN hrgn);
typedef HGDIOBJ(WINAPI* GetCurrentObject_FUNC)(HDC hdc, UINT type);
typedef BOOL(WINAPI* GetCurrentPositionEx_FUNC)(HDC hdc, LPPOINT lppt);
typedef int(WINAPI* GetDeviceCaps_FUNC)(HDC hdc, int index);
typedef int(WINAPI* GetDIBits_FUNC)(HDC hdc, HBITMAP hbm, UINT start, UINT cLines, LPVOID lpvBits, LPBITMAPINFO lpbmi, UINT usage);
typedef DWORD(WINAPI* GetFontData_FUNC)(HDC hdc, DWORD dwTable, DWORD dwOffset, PVOID pvBuffer, DWORD cjBuffer);
typedef DWORD(WINAPI* GetGlyphOutlineA_FUNC)(HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, CONST MAT2* lpmat2);
typedef DWORD(WINAPI* GetGlyphOutlineW_FUNC)(HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, CONST MAT2* lpmat2);
typedef int(WINAPI* GetGraphicsMode_FUNC)(HDC hdc);
typedef int(WINAPI* GetMapMode_FUNC)(HDC hdc);
typedef COLORREF(WINAPI* GetNearestColor_FUNC)(HDC hdc, COLORREF color);
typedef UINT(APIENTRY* GetOutlineTextMetricsA_FUNC)(HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICA potm);
typedef UINT(APIENTRY* GetOutlineTextMetricsW_FUNC)(HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICW potm);
typedef COLORREF(WINAPI* GetPixel_FUNC)(HDC hdc, int x, int y);
typedef int(WINAPI* GetPixelFormat_FUNC)(HDC hdc);
typedef int(WINAPI* GetPolyFillMode_FUNC)(HDC hdc);
typedef int(WINAPI* GetRandomRgn_FUNC)(HDC hdc, HRGN hrgn, INT i);
typedef int(WINAPI* GetStretchBltMode_FUNC)(HDC hdc);
typedef UINT(WINAPI* GetSystemPaletteEntries_FUNC)(HDC hdc, UINT iStart, UINT cEntries, LPPALETTEENTRY pPalEntries);
typedef UINT(WINAPI* GetSystemPaletteUse_FUNC)(HDC hdc);
typedef int(WINAPI* GetTextCharacterExtra_FUNC)(HDC hdc);
typedef UINT(WINAPI* GetTextAlign_FUNC)(HDC hdc);
typedef COLORREF(WINAPI* GetTextColor_FUNC)(HDC hdc);
typedef BOOL(APIENTRY* GetTextExtentPointA_FUNC)(HDC hdc, LPCSTR lpString, int c, LPSIZE lpsz);
typedef BOOL(APIENTRY* GetTextExtentPointW_FUNC)(HDC hdc, LPCWSTR lpString, int c, LPSIZE lpsz);
typedef BOOL(APIENTRY* GetTextExtentPoint32A_FUNC)(HDC hdc, LPCSTR lpString, int c, LPSIZE psizl);
typedef BOOL(APIENTRY* GetTextExtentPoint32W_FUNC)(HDC hdc, LPCWSTR lpString, int c, LPSIZE psizl);
typedef BOOL(APIENTRY* GetTextExtentExPointA_FUNC)(HDC hdc, LPCSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
typedef BOOL(APIENTRY* GetTextExtentExPointW_FUNC)(HDC hdc, LPCWSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
typedef int(WINAPI* GetTextCharset_FUNC)(HDC hdc);
typedef int(WINAPI* GetTextCharsetInfo_FUNC)(HDC hdc, LPFONTSIGNATURE lpSig, DWORD dwFlags);
typedef DWORD(WINAPI* GetFontLanguageInfo_FUNC)(HDC hdc);
typedef DWORD(WINAPI* GetCharacterPlacementA_FUNC)(HDC hdc, LPCSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSA lpResults, DWORD dwFlags);
typedef DWORD(WINAPI* GetCharacterPlacementW_FUNC)(HDC hdc, LPCWSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSW lpResults, DWORD dwFlags);
typedef DWORD(WINAPI* GetFontUnicodeRanges_FUNC)(HDC hdc, LPGLYPHSET lpgs);
typedef DWORD(WINAPI* GetGlyphIndicesA_FUNC)(HDC hdc, LPCSTR lpstr, int c, LPWORD pgi, DWORD fl);
typedef DWORD(WINAPI* GetGlyphIndicesW_FUNC)(HDC hdc, LPCWSTR lpstr, int c, LPWORD pgi, DWORD fl);
typedef BOOL(WINAPI* GetTextExtentExPointI_FUNC)(HDC hdc, LPWORD lpwszString, int cwchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
typedef BOOL(WINAPI* GetViewportExtEx_FUNC)(HDC hdc, LPSIZE lpsize);
typedef BOOL(WINAPI* GetViewportOrgEx_FUNC)(HDC hdc, LPPOINT lppoint);
typedef BOOL(WINAPI* GetWindowExtEx_FUNC)(HDC hdc, LPSIZE lpsize);
typedef BOOL(WINAPI* GetWindowOrgEx_FUNC)(HDC hdc, LPPOINT lppoint);
typedef int(WINAPI* IntersectClipRect_FUNC)(HDC hdc, int left, int top, int right, int bottom);
typedef BOOL(WINAPI* InvertRgn_FUNC)(HDC hdc, HRGN hrgn);
typedef BOOL(WINAPI* LineTo_FUNC)(HDC hdc, int x, int y);
typedef BOOL(WINAPI* MaskBlt_FUNC)(HDC hdcDest, int xDest, int yDest, int width, int height, HDC hdcSrc, int xSrc, int ySrc, HBITMAP hbmMask, int xMask, int yMask, DWORD rop);
typedef BOOL(WINAPI* PlgBlt_FUNC)(HDC hdcDest, CONST POINT* lpPoint, HDC hdcSrc, int xSrc, int ySrc, int width, int height, HBITMAP hbmMask, int xMask, int yMask);
typedef int(WINAPI* OffsetClipRgn_FUNC)(HDC hdc, int x, int y);
typedef BOOL(WINAPI* PatBlt_FUNC)(HDC hdc, int x, int y, int w, int h, DWORD rop);
typedef BOOL(WINAPI* Pie_FUNC)(HDC hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2);
typedef BOOL(WINAPI* PlayMetaFile_FUNC)(HDC hdc, HMETAFILE hmf);
typedef BOOL(WINAPI* PaintRgn_FUNC)(HDC hdc, HRGN hrgn);
typedef BOOL(WINAPI* PolyPolygon_FUNC)(HDC hdc, CONST POINT* apt, CONST INT* asz, int csz);
typedef BOOL(WINAPI* PtVisible_FUNC)(HDC hdc, int x, int y);
typedef BOOL(WINAPI* RectVisible_FUNC)(HDC hdc, CONST RECT* lprect);
typedef BOOL(WINAPI* Rectangle_FUNC)(HDC hdc, int left, int top, int right, int bottom);
typedef BOOL(WINAPI* RestoreDC_FUNC)(HDC hdc, int nSavedDC);
typedef HDC(WINAPI* ResetDCA_FUNC)(HDC hdc, CONST DEVMODEA* lpdm);
typedef HDC(WINAPI* ResetDCW_FUNC)(HDC hdc, CONST DEVMODEW* lpdm);
typedef UINT(WINAPI* RealizePalette_FUNC)(HDC hdc);
typedef BOOL(WINAPI* RoundRect_FUNC)(HDC hdc, int left, int top, int right, int bottom, int width, int height);
typedef int(WINAPI* SaveDC_FUNC)(HDC hdc);
typedef int(WINAPI* SelectClipRgn_FUNC)(HDC hdc, HRGN hrgn);
typedef int(WINAPI* ExtSelectClipRgn_FUNC)(HDC hdc, HRGN hrgn, int mode);
typedef int(WINAPI* SetMetaRgn_FUNC)(HDC hdc);
typedef HGDIOBJ(WINAPI* SelectObject_FUNC)(HDC hdc, HGDIOBJ h);
typedef HPALETTE(WINAPI* SelectPalette_FUNC)(HDC hdc, HPALETTE hPal, BOOL bForceBkgd);
typedef COLORREF(WINAPI* SetBkColor_FUNC)(HDC hdc, COLORREF color);
typedef COLORREF(WINAPI* SetDCBrushColor_FUNC)(HDC hdc, COLORREF color);
typedef COLORREF(WINAPI* SetDCPenColor_FUNC)(HDC hdc, COLORREF color);
typedef int(WINAPI* SetBkMode_FUNC)(HDC hdc, int mode);
typedef UINT(WINAPI* SetBoundsRect_FUNC)(HDC hdc, CONST RECT* lprect, UINT flags);
typedef int(WINAPI* SetDIBits_FUNC)(HDC hdc, HBITMAP hbm, UINT start, UINT cLines, CONST VOID* lpBits, CONST BITMAPINFO* lpbmi, UINT ColorUse);
typedef int(WINAPI* SetDIBitsToDevice_FUNC)(HDC hdc, int xDest, int yDest, DWORD w, DWORD h, int xSrc, int ySrc, UINT StartScan, UINT cLines, CONST VOID* lpvBits, CONST BITMAPINFO* lpbmi, UINT ColorUse);
typedef DWORD(WINAPI* SetMapperFlags_FUNC)(HDC hdc, DWORD flags);
typedef int(WINAPI* SetGraphicsMode_FUNC)(HDC hdc, int iMode);
typedef int(WINAPI* SetMapMode_FUNC)(HDC hdc, int iMode);
typedef DWORD(WINAPI* SetLayout_FUNC)(HDC hdc, DWORD l);
typedef DWORD(WINAPI* GetLayout_FUNC)(HDC hdc);
typedef COLORREF(WINAPI* SetPixel_FUNC)(HDC hdc, int x, int y, COLORREF color);
typedef BOOL(WINAPI* SetPixelV_FUNC)(HDC hdc, int x, int y, COLORREF color);
typedef BOOL(WINAPI* SetPixelFormat_FUNC)(HDC hdc, int format, CONST PIXELFORMATDESCRIPTOR* ppfd);
typedef int(WINAPI* SetPolyFillMode_FUNC)(HDC hdc, int mode);
typedef BOOL(WINAPI* StretchBlt_FUNC)(HDC hdcDest, int xDest, int yDest, int wDest, int hDest, HDC hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, DWORD rop);
typedef int(WINAPI* StretchDIBits_FUNC)(HDC hdc, int xDest, int yDest, int DestWidth, int DestHeight, int xSrc, int ySrc, int SrcWidth, int SrcHeight, CONST VOID* lpBits, CONST BITMAPINFO* lpbmi, UINT iUsage, DWORD rop);
typedef int(WINAPI* SetROP2_FUNC)(HDC hdc, int rop2);
typedef int(WINAPI* SetStretchBltMode_FUNC)(HDC hdc, int mode);
typedef UINT(WINAPI* SetSystemPaletteUse_FUNC)(HDC hdc, UINT use);
typedef int(WINAPI* SetTextCharacterExtra_FUNC)(HDC hdc, int extra);
typedef COLORREF(WINAPI* SetTextColor_FUNC)(HDC hdc, COLORREF color);
typedef UINT(WINAPI* SetTextAlign_FUNC)(HDC hdc, UINT align);
typedef BOOL(WINAPI* SetTextJustification_FUNC)(HDC hdc, int extra, int count);
typedef BOOL(WINAPI* UpdateColors_FUNC)(HDC hdc);
typedef BOOL(WINAPI* AlphaBlend_FUNC)(HDC hdcDest, int xoriginDest, int yoriginDest, int wDest, int hDest, HDC hdcSrc, int xoriginSrc, int yoriginSrc, int wSrc, int hSrc, BLENDFUNCTION ftn);
typedef BOOL(WINAPI* TransparentBlt_FUNC)(HDC hdcDest, int xoriginDest, int yoriginDest, int wDest, int hDest, HDC hdcSrc, int xoriginSrc, int yoriginSrc, int wSrc, int hSrc, UINT crTransparent);
typedef BOOL(WINAPI* GradientFill_FUNC)(HDC hdc, PTRIVERTEX pVertex, ULONG nVertex, PVOID pMesh, ULONG nMesh, ULONG ulMode);
typedef BOOL(WINAPI* PlayMetaFileRecord_FUNC)(HDC hdc, LPHANDLETABLE lpHandleTable, LPMETARECORD lpMR, UINT noObjs);
typedef BOOL(WINAPI* EnumMetaFile_FUNC)(HDC hdc, HMETAFILE hmf, MFENUMPROC proc, LPARAM param);
typedef HENHMETAFILE(WINAPI* CloseEnhMetaFile_FUNC)(HDC hdc);
typedef HDC(WINAPI* CreateEnhMetaFileA_FUNC)(HDC hdc, LPCSTR lpFilename, CONST RECT* lprc, LPCSTR lpDesc);
typedef HDC(WINAPI* CreateEnhMetaFileW_FUNC)(HDC hdc, LPCWSTR lpFilename, CONST RECT* lprc, LPCWSTR lpDesc);
typedef BOOL(WINAPI* EnumEnhMetaFile_FUNC)(HDC hdc, HENHMETAFILE hmf, ENHMFENUMPROC proc, LPVOID param, CONST RECT* lpRect);
typedef UINT(WINAPI* GetWinMetaFileBits_FUNC)(HENHMETAFILE hemf, UINT cbData16, LPBYTE pData16, INT iMapMode, HDC hdcRef);
typedef BOOL(WINAPI* PlayEnhMetaFile_FUNC)(HDC hdc, HENHMETAFILE hmf, CONST RECT* lprect);
typedef BOOL(WINAPI* PlayEnhMetaFileRecord_FUNC)(HDC hdc, LPHANDLETABLE pht, CONST ENHMETARECORD* pmr, UINT cht);
typedef HENHMETAFILE(WINAPI* SetWinMetaFileBits_FUNC)(UINT nSize, CONST BYTE* lpMeta16Data, HDC hdcRef, CONST METAFILEPICT* lpMFP);
typedef BOOL(WINAPI* GdiComment_FUNC)(HDC hdc, UINT nSize, CONST BYTE* lpData);
typedef BOOL(WINAPI* GetTextMetricsA_FUNC)(HDC hdc, LPTEXTMETRICA lptm);
typedef BOOL(WINAPI* GetTextMetricsW_FUNC)(HDC hdc, LPTEXTMETRICW lptm);
typedef BOOL(WINAPI* AngleArc_FUNC)(HDC hdc, int x, int y, DWORD r, FLOAT StartAngle, FLOAT SweepAngle);
typedef BOOL(WINAPI* PolyPolyline_FUNC)(HDC hdc, CONST POINT* apt, CONST DWORD* asz, DWORD csz);
typedef BOOL(WINAPI* GetWorldTransform_FUNC)(HDC hdc, LPXFORM lpxf);
typedef BOOL(WINAPI* SetWorldTransform_FUNC)(HDC hdc, CONST XFORM* lpxf);
typedef BOOL(WINAPI* ModifyWorldTransform_FUNC)(HDC hdc, CONST XFORM* lpxf, DWORD mode);
typedef HBITMAP(WINAPI* CreateDIBSection_FUNC)(HDC hdc, CONST BITMAPINFO* pbmi, UINT usage, VOID** ppvBits, HANDLE hSection, DWORD offset);
typedef UINT(WINAPI* GetDIBColorTable_FUNC)(HDC hdc, UINT iStart, UINT cEntries, RGBQUAD* prgbq);
typedef UINT(WINAPI* SetDIBColorTable_FUNC)(HDC hdc, UINT iStart, UINT cEntries, CONST RGBQUAD* prgbq);
typedef BOOL(WINAPI* SetColorAdjustment_FUNC)(HDC hdc, CONST COLORADJUSTMENT* lpca);
typedef BOOL(WINAPI* GetColorAdjustment_FUNC)(HDC hdc, LPCOLORADJUSTMENT lpca);
typedef HPALETTE(WINAPI* CreateHalftonePalette_FUNC)(HDC hdc);
typedef int(WINAPI* StartDocA_FUNC)(HDC hdc, CONST DOCINFOA* lpdi);
typedef int(WINAPI* StartDocW_FUNC)(HDC hdc, CONST DOCINFOW* lpdi);
typedef int(WINAPI* EndDoc_FUNC)(HDC hdc);
typedef int(WINAPI* StartPage_FUNC)(HDC hdc);
typedef int(WINAPI* EndPage_FUNC)(HDC hdc);
typedef int(WINAPI* AbortDoc_FUNC)(HDC hdc);
typedef int(WINAPI* SetAbortProc_FUNC)(HDC hdc, ABORTPROC proc);
typedef BOOL(WINAPI* AbortPath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* ArcTo_FUNC)(HDC hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2);
typedef BOOL(WINAPI* BeginPath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* CloseFigure_FUNC)(HDC hdc);
typedef BOOL(WINAPI* EndPath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* FillPath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* FlattenPath_FUNC)(HDC hdc);
typedef int(WINAPI* GetPath_FUNC)(HDC hdc, LPPOINT apt, LPBYTE aj, int cpt);
typedef HRGN(WINAPI* PathToRegion_FUNC)(HDC hdc);
typedef BOOL(WINAPI* PolyDraw_FUNC)(HDC hdc, CONST POINT* apt, CONST BYTE* aj, int cpt);
typedef BOOL(WINAPI* SelectClipPath_FUNC)(HDC hdc, int mode);
typedef int(WINAPI* SetArcDirection_FUNC)(HDC hdc, int dir);
typedef BOOL(WINAPI* SetMiterLimit_FUNC)(HDC hdc, FLOAT limit, PFLOAT old);
typedef BOOL(WINAPI* StrokeAndFillPath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* StrokePath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* WidenPath_FUNC)(HDC hdc);
typedef BOOL(WINAPI* GetMiterLimit_FUNC)(HDC hdc, PFLOAT plimit);
typedef int(WINAPI* GetArcDirection_FUNC)(HDC hdc);
typedef BOOL(WINAPI* MoveToEx_FUNC)(HDC hdc, int x, int y, LPPOINT lppt);
typedef BOOL(WINAPI* TextOutA_FUNC)(HDC hdc, int x, int y, LPCSTR lpString, int c);
typedef BOOL(WINAPI* TextOutW_FUNC)(HDC hdc, int x, int y, LPCWSTR lpString, int c);
typedef BOOL(WINAPI* ExtTextOutA_FUNC)(HDC hdc, int x, int y, UINT options, CONST RECT* lprect, LPCSTR lpString, UINT c, CONST INT* lpDx);
typedef BOOL(WINAPI* ExtTextOutW_FUNC)(HDC hdc, int x, int y, UINT options, CONST RECT* lprect, LPCWSTR lpString, UINT c, CONST INT* lpDx);
typedef BOOL(WINAPI* PolyTextOutA_FUNC)(HDC hdc, CONST POLYTEXTA* ppt, int nstrings);
typedef BOOL(WINAPI* PolyTextOutW_FUNC)(HDC hdc, CONST POLYTEXTW* ppt, int nstrings);
typedef BOOL(WINAPI* DPtoLP_FUNC)(HDC hdc, LPPOINT lppt, int c);
typedef BOOL(WINAPI* LPtoDP_FUNC)(HDC hdc, LPPOINT lppt, int c);
typedef BOOL(WINAPI* Polygon_FUNC)(HDC hdc, CONST POINT* apt, int cpt);
typedef BOOL(WINAPI* Polyline_FUNC)(HDC hdc, CONST POINT* apt, int cpt);
typedef BOOL(WINAPI* PolyBezier_FUNC)(HDC hdc, CONST POINT* apt, DWORD cpt);
typedef BOOL(WINAPI* PolyBezierTo_FUNC)(HDC hdc, CONST POINT* apt, DWORD cpt);
typedef BOOL(WINAPI* PolylineTo_FUNC)(HDC hdc, CONST POINT* apt, DWORD cpt);
typedef BOOL(WINAPI* SetViewportExtEx_FUNC)(HDC hdc, int x, int y, LPSIZE lpsz);
typedef BOOL(WINAPI* SetViewportOrgEx_FUNC)(HDC hdc, int x, int y, LPPOINT lppt);
typedef BOOL(WINAPI* SetWindowExtEx_FUNC)(HDC hdc, int x, int y, LPSIZE lpsz);
typedef BOOL(WINAPI* SetWindowOrgEx_FUNC)(HDC hdc, int x, int y, LPPOINT lppt);
typedef BOOL(WINAPI* OffsetViewportOrgEx_FUNC)(HDC hdc, int x, int y, LPPOINT lppt);
typedef BOOL(WINAPI* OffsetWindowOrgEx_FUNC)(HDC hdc, int x, int y, LPPOINT lppt);
typedef BOOL(WINAPI* ScaleViewportExtEx_FUNC)(HDC hdc, int xn, int dx, int yn, int yd, LPSIZE lpsz);
typedef BOOL(WINAPI* ScaleWindowExtEx_FUNC)(HDC hdc, int xn, int xd, int yn, int yd, LPSIZE lpsz);
typedef BOOL(WINAPI* SetBrushOrgEx_FUNC)(HDC hdc, int x, int y, LPPOINT lppt);
typedef int(WINAPI* GetTextFaceA_FUNC)(HDC hdc, int c, LPSTR lpName);
typedef int(WINAPI* GetTextFaceW_FUNC)(HDC hdc, int c, LPWSTR lpName);
typedef DWORD(WINAPI* GetKerningPairsA_FUNC)(HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair);
typedef DWORD(WINAPI* GetKerningPairsW_FUNC)(HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair);
typedef BOOL(WINAPI* GetDCOrgEx_FUNC)(HDC hdc, LPPOINT lppt);
typedef BOOL(WINAPI* FixBrushOrgEx_FUNC)(HDC hdc, int x, int y, LPPOINT ptl);
typedef int(WINAPI* SetICMMode_FUNC)(HDC hdc, int mode);
typedef BOOL(WINAPI* CheckColorsInGamut_FUNC)(HDC hdc, LPRGBTRIPLE lpRGBTriple, LPVOID dlpBuffer, DWORD nCount);
typedef HCOLORSPACE(WINAPI* GetColorSpace_FUNC)(HDC hdc);
typedef HCOLORSPACE(WINAPI* SetColorSpace_FUNC)(HDC hdc, HCOLORSPACE hcs);
typedef BOOL(WINAPI* GetICMProfileA_FUNC)(HDC hdc, LPDWORD pBufSize, LPSTR pszFilename);
typedef BOOL(WINAPI* GetICMProfileW_FUNC)(HDC hdc, LPDWORD pBufSize, LPWSTR pszFilename);
typedef BOOL(WINAPI* SetICMProfileA_FUNC)(HDC hdc, LPSTR lpFileName);
typedef BOOL(WINAPI* SetICMProfileW_FUNC)(HDC hdc, LPWSTR lpFileName);
typedef BOOL(WINAPI* GetDeviceGammaRamp_FUNC)(HDC hdc, LPVOID lpRamp);
typedef BOOL(WINAPI* SetDeviceGammaRamp_FUNC)(HDC hdc, LPVOID lpRamp);
typedef BOOL(WINAPI* ColorMatchToTarget_FUNC)(HDC hdc, HDC hdcTarget, DWORD action);
typedef int(WINAPI* EnumICMProfilesA_FUNC)(HDC hdc, ICMENUMPROCA proc, LPARAM param);
typedef int(WINAPI* EnumICMProfilesW_FUNC)(HDC hdc, ICMENUMPROCW proc, LPARAM param);
typedef BOOL(WINAPI* ColorCorrectPalette_FUNC)(HDC hdc, HPALETTE hPal, DWORD deFirst, DWORD num);
typedef HGLRC(WINAPI* wglCreateContext_FUNC)(HDC hdc);
typedef HGLRC(WINAPI* wglCreateLayerContext_FUNC)(HDC hdc, int _arg2);
typedef BOOL(WINAPI* wglMakeCurrent_FUNC)(HDC hdc, HGLRC _arg2);
typedef BOOL(WINAPI* wglUseFontBitmapsA_FUNC)(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4);
typedef BOOL(WINAPI* wglUseFontBitmapsW_FUNC)(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4);
typedef BOOL(WINAPI* SwapBuffers_FUNC)(HDC hdc);
typedef BOOL(WINAPI* wglUseFontOutlinesA_FUNC)(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4, FLOAT _arg5, FLOAT _arg6, int _arg7, LPGLYPHMETRICSFLOAT _arg8);
typedef BOOL(WINAPI* wglUseFontOutlinesW_FUNC)(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4, FLOAT _arg5, FLOAT _arg6, int _arg7, LPGLYPHMETRICSFLOAT _arg8);
typedef BOOL(WINAPI* wglDescribeLayerPlane_FUNC)(HDC hdc, int _arg2, int _arg3, UINT _arg4, LPLAYERPLANEDESCRIPTOR _arg5);
typedef int(WINAPI* wglSetLayerPaletteEntries_FUNC)(HDC hdc, int _arg2, int _arg3, int _arg4, CONST COLORREF* _arg5);
typedef int(WINAPI* wglGetLayerPaletteEntries_FUNC)(HDC hdc, int _arg2, int _arg3, int _arg4, COLORREF*);
typedef BOOL(WINAPI* wglRealizeLayerPalette_FUNC)(HDC hdc, int _arg2, BOOL _arg3);
typedef BOOL(WINAPI* wglSwapLayerBuffers_FUNC)(HDC hdc, UINT _arg2);
//From User32:
typedef BOOL(WINAPI* DrawEdge_FUNC)(HDC hdc, LPRECT qrc, UINT edge, UINT grfFlags);
typedef BOOL(WINAPI* DrawFrameControl_FUNC)(HDC hdc, LPRECT _arg2, UINT _arg3, UINT _arg4);
typedef BOOL(WINAPI* DrawCaption_FUNC)(HWND hwnd, HDC hdc, CONST RECT* lprect, UINT flags);
typedef BOOL(WINAPI* PrintWindow_FUNC)(HWND hwnd, HDC hdcBlt, UINT nFlags);
typedef BOOL(WINAPI* DrawIcon_FUNC)(HDC hDC, int X, int Y, HICON hIcon);
typedef int(WINAPI* DrawTextA_FUNC)(HDC hdc, LPCSTR lpchText, int cchText, LPRECT lprc, UINT format);
typedef int(WINAPI* DrawTextW_FUNC)(HDC hdc, LPCWSTR lpchText, int cchText, LPRECT lprc, UINT format);
typedef int(WINAPI* DrawTextExA_FUNC)(HDC hdc, LPSTR lpchText, int cchText, LPRECT lprc, UINT format, LPDRAWTEXTPARAMS lpdtp);
typedef int(WINAPI* DrawTextExW_FUNC)(HDC hdc, LPWSTR lpchText, int cchText, LPRECT lprc, UINT format, LPDRAWTEXTPARAMS lpdtp);
typedef BOOL(WINAPI* GrayStringA_FUNC)(HDC hDC, HBRUSH hBrush, GRAYSTRINGPROC lpOutputFunc, LPARAM lpData, int nCount, int X, int Y, int nWidth, int nHeight);
typedef BOOL(WINAPI* GrayStringW_FUNC)(HDC hDC, HBRUSH hBrush, GRAYSTRINGPROC lpOutputFunc, LPARAM lpData, int nCount, int X, int Y, int nWidth, int nHeight);
typedef BOOL(WINAPI* DrawStateA_FUNC)(HDC hdc, HBRUSH hbrFore, DRAWSTATEPROC qfnCallBack, LPARAM lData, WPARAM wData, int x, int y, int cx, int cy, UINT uFlags);
typedef BOOL(WINAPI* DrawStateW_FUNC)(HDC hdc, HBRUSH hbrFore, DRAWSTATEPROC qfnCallBack, LPARAM lData, WPARAM wData, int x, int y, int cx, int cy, UINT uFlags);
typedef LONG(WINAPI* TabbedTextOutA_FUNC)(HDC hdc, int x, int y, LPCSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions, int nTabOrigin);
typedef LONG(WINAPI* TabbedTextOutW_FUNC)(HDC hdc, int x, int y, LPCWSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions, int nTabOrigin);
typedef DWORD(WINAPI* GetTabbedTextExtentA_FUNC)(HDC hdc, LPCSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions);
typedef DWORD(WINAPI* GetTabbedTextExtentW_FUNC)(HDC hdc, LPCWSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions);
typedef BOOL(WINAPI* PaintDesktop_FUNC)(HDC hdc);
typedef int(WINAPI* ExcludeUpdateRgn_FUNC)(HDC hDC, HWND hWnd);
typedef BOOL(WINAPI* ScrollDC_FUNC)(HDC hDC, int dx, int dy, CONST RECT* lprcScroll, CONST RECT* lprcClip, HRGN hrgnUpdate, LPRECT lprcUpdate);
typedef BOOL(WINAPI* DrawFocusRect_FUNC)(HDC hDC, CONST RECT* lprc);
typedef int(WINAPI* FillRect_FUNC)(HDC hDC, CONST RECT* lprc, HBRUSH hbr);
typedef int(WINAPI* FrameRect_FUNC)(HDC hDC, CONST RECT* lprc, HBRUSH hbr);
typedef BOOL(WINAPI* InvertRect_FUNC)(HDC hDC, CONST RECT* lprc);
typedef BOOL(WINAPI* DrawIconEx_FUNC)(HDC hdc, int xLeft, int yTop, HICON hIcon, int cxWidth, int cyWidth, UINT istepIfAniCur, HBRUSH hbrFlickerFreeDraw, UINT diFlags);

//Import Backups (Declarations)
extern Arc_FUNC Arc_OLD;
extern BitBlt_FUNC BitBlt_OLD;
extern CancelDC_FUNC CancelDC_OLD;
extern Chord_FUNC Chord_OLD;
extern ChoosePixelFormat_FUNC ChoosePixelFormat_OLD;
extern CloseMetaFile_FUNC CloseMetaFile_OLD;
extern CreateCompatibleBitmap_FUNC CreateCompatibleBitmap_OLD;
extern CreateDiscardableBitmap_FUNC CreateDiscardableBitmap_OLD;
extern CreateCompatibleDC_FUNC CreateCompatibleDC_OLD;
extern CreateDIBitmap_FUNC CreateDIBitmap_OLD;
extern DeleteDC_FUNC DeleteDC_OLD;
extern DescribePixelFormat_FUNC DescribePixelFormat_OLD;
extern DrawEscape_FUNC DrawEscape_OLD;
extern Ellipse_FUNC Ellipse_OLD;
extern EnumFontFamiliesExA_FUNC EnumFontFamiliesExA_OLD;
extern EnumFontFamiliesExW_FUNC EnumFontFamiliesExW_OLD;
extern EnumFontFamiliesA_FUNC EnumFontFamiliesA_OLD;
extern EnumFontFamiliesW_FUNC EnumFontFamiliesW_OLD;
extern EnumFontsA_FUNC EnumFontsA_OLD;
extern EnumFontsW_FUNC EnumFontsW_OLD;
extern EnumObjects_FUNC EnumObjects_OLD;
extern Escape_FUNC Escape_OLD;
extern ExtEscape_FUNC ExtEscape_OLD;
extern ExcludeClipRect_FUNC ExcludeClipRect_OLD;
extern ExtFloodFill_FUNC ExtFloodFill_OLD;
extern FillRgn_FUNC FillRgn_OLD;
extern FloodFill_FUNC FloodFill_OLD;
extern GetROP2_FUNC GetROP2_OLD;
extern GetAspectRatioFilterEx_FUNC GetAspectRatioFilterEx_OLD;
extern GetBkColor_FUNC GetBkColor_OLD;
extern GetDCBrushColor_FUNC GetDCBrushColor_OLD;
extern GetDCPenColor_FUNC GetDCPenColor_OLD;
extern GetBkMode_FUNC GetBkMode_OLD;
extern GetBoundsRect_FUNC GetBoundsRect_OLD;
extern GetBrushOrgEx_FUNC GetBrushOrgEx_OLD;
extern GetCharWidthA_FUNC GetCharWidthA_OLD;
extern GetCharWidthW_FUNC GetCharWidthW_OLD;
extern GetCharWidth32A_FUNC GetCharWidth32A_OLD;
extern GetCharWidth32W_FUNC GetCharWidth32W_OLD;
extern GetCharWidthFloatA_FUNC GetCharWidthFloatA_OLD;
extern GetCharWidthFloatW_FUNC GetCharWidthFloatW_OLD;
extern GetCharABCWidthsA_FUNC GetCharABCWidthsA_OLD;
extern GetCharABCWidthsW_FUNC GetCharABCWidthsW_OLD;
extern GetCharABCWidthsFloatA_FUNC GetCharABCWidthsFloatA_OLD;
extern GetCharABCWidthsFloatW_FUNC GetCharABCWidthsFloatW_OLD;
extern GetClipBox_FUNC GetClipBox_OLD;
extern GetClipRgn_FUNC GetClipRgn_OLD;
extern GetMetaRgn_FUNC GetMetaRgn_OLD;
extern GetCurrentObject_FUNC GetCurrentObject_OLD;
extern GetCurrentPositionEx_FUNC GetCurrentPositionEx_OLD;
extern GetDeviceCaps_FUNC GetDeviceCaps_OLD;
extern GetDIBits_FUNC GetDIBits_OLD;
extern GetFontData_FUNC GetFontData_OLD;
extern GetGlyphOutlineA_FUNC GetGlyphOutlineA_OLD;
extern GetGlyphOutlineW_FUNC GetGlyphOutlineW_OLD;
extern GetGraphicsMode_FUNC GetGraphicsMode_OLD;
extern GetMapMode_FUNC GetMapMode_OLD;
extern GetNearestColor_FUNC GetNearestColor_OLD;
extern GetOutlineTextMetricsA_FUNC GetOutlineTextMetricsA_OLD;
extern GetOutlineTextMetricsW_FUNC GetOutlineTextMetricsW_OLD;
extern GetPixel_FUNC GetPixel_OLD;
extern GetPixelFormat_FUNC GetPixelFormat_OLD;
extern GetPolyFillMode_FUNC GetPolyFillMode_OLD;
extern GetRandomRgn_FUNC GetRandomRgn_OLD;
extern GetStretchBltMode_FUNC GetStretchBltMode_OLD;
extern GetSystemPaletteEntries_FUNC GetSystemPaletteEntries_OLD;
extern GetSystemPaletteUse_FUNC GetSystemPaletteUse_OLD;
extern GetTextCharacterExtra_FUNC GetTextCharacterExtra_OLD;
extern GetTextAlign_FUNC GetTextAlign_OLD;
extern GetTextColor_FUNC GetTextColor_OLD;
extern GetTextExtentPointA_FUNC GetTextExtentPointA_OLD;
extern GetTextExtentPointW_FUNC GetTextExtentPointW_OLD;
extern GetTextExtentPoint32A_FUNC GetTextExtentPoint32A_OLD;
extern GetTextExtentPoint32W_FUNC GetTextExtentPoint32W_OLD;
extern GetTextExtentExPointA_FUNC GetTextExtentExPointA_OLD;
extern GetTextExtentExPointW_FUNC GetTextExtentExPointW_OLD;
extern GetTextCharset_FUNC GetTextCharset_OLD;
extern GetTextCharsetInfo_FUNC GetTextCharsetInfo_OLD;
extern GetFontLanguageInfo_FUNC GetFontLanguageInfo_OLD;
extern GetCharacterPlacementA_FUNC GetCharacterPlacementA_OLD;
extern GetCharacterPlacementW_FUNC GetCharacterPlacementW_OLD;
extern GetFontUnicodeRanges_FUNC GetFontUnicodeRanges_OLD;
extern GetGlyphIndicesA_FUNC GetGlyphIndicesA_OLD;
extern GetGlyphIndicesW_FUNC GetGlyphIndicesW_OLD;
extern GetTextExtentExPointI_FUNC GetTextExtentExPointI_OLD;
extern GetViewportExtEx_FUNC GetViewportExtEx_OLD;
extern GetViewportOrgEx_FUNC GetViewportOrgEx_OLD;
extern GetWindowExtEx_FUNC GetWindowExtEx_OLD;
extern GetWindowOrgEx_FUNC GetWindowOrgEx_OLD;
extern IntersectClipRect_FUNC IntersectClipRect_OLD;
extern InvertRgn_FUNC InvertRgn_OLD;
extern LineTo_FUNC LineTo_OLD;
extern MaskBlt_FUNC MaskBlt_OLD;
extern PlgBlt_FUNC PlgBlt_OLD;
extern OffsetClipRgn_FUNC OffsetClipRgn_OLD;
extern PatBlt_FUNC PatBlt_OLD;
extern Pie_FUNC Pie_OLD;
extern PlayMetaFile_FUNC PlayMetaFile_OLD;
extern PaintRgn_FUNC PaintRgn_OLD;
extern PolyPolygon_FUNC PolyPolygon_OLD;
extern PtVisible_FUNC PtVisible_OLD;
extern RectVisible_FUNC RectVisible_OLD;
extern Rectangle_FUNC Rectangle_OLD;
extern RestoreDC_FUNC RestoreDC_OLD;
extern ResetDCA_FUNC ResetDCA_OLD;
extern ResetDCW_FUNC ResetDCW_OLD;
extern RealizePalette_FUNC RealizePalette_OLD;
extern RoundRect_FUNC RoundRect_OLD;
extern SaveDC_FUNC SaveDC_OLD;
extern SelectClipRgn_FUNC SelectClipRgn_OLD;
extern ExtSelectClipRgn_FUNC ExtSelectClipRgn_OLD;
extern SetMetaRgn_FUNC SetMetaRgn_OLD;
extern SelectObject_FUNC SelectObject_OLD;
extern SelectPalette_FUNC SelectPalette_OLD;
extern SetBkColor_FUNC SetBkColor_OLD;
extern SetDCBrushColor_FUNC SetDCBrushColor_OLD;
extern SetDCPenColor_FUNC SetDCPenColor_OLD;
extern SetBkMode_FUNC SetBkMode_OLD;
extern SetBoundsRect_FUNC SetBoundsRect_OLD;
extern SetDIBits_FUNC SetDIBits_OLD;
extern SetDIBitsToDevice_FUNC SetDIBitsToDevice_OLD;
extern SetMapperFlags_FUNC SetMapperFlags_OLD;
extern SetGraphicsMode_FUNC SetGraphicsMode_OLD;
extern SetMapMode_FUNC SetMapMode_OLD;
extern SetLayout_FUNC SetLayout_OLD;
extern GetLayout_FUNC GetLayout_OLD;
extern SetPixel_FUNC SetPixel_OLD;
extern SetPixelV_FUNC SetPixelV_OLD;
extern SetPixelFormat_FUNC SetPixelFormat_OLD;
extern SetPolyFillMode_FUNC SetPolyFillMode_OLD;
extern StretchBlt_FUNC StretchBlt_OLD;
extern StretchDIBits_FUNC StretchDIBits_OLD;
extern SetROP2_FUNC SetROP2_OLD;
extern SetStretchBltMode_FUNC SetStretchBltMode_OLD;
extern SetSystemPaletteUse_FUNC SetSystemPaletteUse_OLD;
extern SetTextCharacterExtra_FUNC SetTextCharacterExtra_OLD;
extern SetTextColor_FUNC SetTextColor_OLD;
extern SetTextAlign_FUNC SetTextAlign_OLD;
extern SetTextJustification_FUNC SetTextJustification_OLD;
extern UpdateColors_FUNC UpdateColors_OLD;
extern AlphaBlend_FUNC AlphaBlend_OLD;
extern TransparentBlt_FUNC TransparentBlt_OLD;
extern GradientFill_FUNC GradientFill_OLD;
extern PlayMetaFileRecord_FUNC PlayMetaFileRecord_OLD;
extern EnumMetaFile_FUNC EnumMetaFile_OLD;
extern CloseEnhMetaFile_FUNC CloseEnhMetaFile_OLD;
extern CreateEnhMetaFileA_FUNC CreateEnhMetaFileA_OLD;
extern CreateEnhMetaFileW_FUNC CreateEnhMetaFileW_OLD;
extern EnumEnhMetaFile_FUNC EnumEnhMetaFile_OLD;
extern GetWinMetaFileBits_FUNC GetWinMetaFileBits_OLD;
extern PlayEnhMetaFile_FUNC PlayEnhMetaFile_OLD;
extern PlayEnhMetaFileRecord_FUNC PlayEnhMetaFileRecord_OLD;
extern SetWinMetaFileBits_FUNC SetWinMetaFileBits_OLD;
extern GdiComment_FUNC GdiComment_OLD;
extern GetTextMetricsA_FUNC GetTextMetricsA_OLD;
extern GetTextMetricsW_FUNC GetTextMetricsW_OLD;
extern AngleArc_FUNC AngleArc_OLD;
extern PolyPolyline_FUNC PolyPolyline_OLD;
extern GetWorldTransform_FUNC GetWorldTransform_OLD;
extern SetWorldTransform_FUNC SetWorldTransform_OLD;
extern ModifyWorldTransform_FUNC ModifyWorldTransform_OLD;
extern CreateDIBSection_FUNC CreateDIBSection_OLD;
extern GetDIBColorTable_FUNC GetDIBColorTable_OLD;
extern SetDIBColorTable_FUNC SetDIBColorTable_OLD;
extern SetColorAdjustment_FUNC SetColorAdjustment_OLD;
extern GetColorAdjustment_FUNC GetColorAdjustment_OLD;
extern CreateHalftonePalette_FUNC CreateHalftonePalette_OLD;
extern StartDocA_FUNC StartDocA_OLD;
extern StartDocW_FUNC StartDocW_OLD;
extern EndDoc_FUNC EndDoc_OLD;
extern StartPage_FUNC StartPage_OLD;
extern EndPage_FUNC EndPage_OLD;
extern AbortDoc_FUNC AbortDoc_OLD;
extern SetAbortProc_FUNC SetAbortProc_OLD;
extern AbortPath_FUNC AbortPath_OLD;
extern ArcTo_FUNC ArcTo_OLD;
extern BeginPath_FUNC BeginPath_OLD;
extern CloseFigure_FUNC CloseFigure_OLD;
extern EndPath_FUNC EndPath_OLD;
extern FillPath_FUNC FillPath_OLD;
extern FlattenPath_FUNC FlattenPath_OLD;
extern GetPath_FUNC GetPath_OLD;
extern PathToRegion_FUNC PathToRegion_OLD;
extern PolyDraw_FUNC PolyDraw_OLD;
extern SelectClipPath_FUNC SelectClipPath_OLD;
extern SetArcDirection_FUNC SetArcDirection_OLD;
extern SetMiterLimit_FUNC SetMiterLimit_OLD;
extern StrokeAndFillPath_FUNC StrokeAndFillPath_OLD;
extern StrokePath_FUNC StrokePath_OLD;
extern WidenPath_FUNC WidenPath_OLD;
extern GetMiterLimit_FUNC GetMiterLimit_OLD;
extern GetArcDirection_FUNC GetArcDirection_OLD;
extern MoveToEx_FUNC MoveToEx_OLD;
extern TextOutA_FUNC TextOutA_OLD;
extern TextOutW_FUNC TextOutW_OLD;
extern ExtTextOutA_FUNC ExtTextOutA_OLD;
extern ExtTextOutW_FUNC ExtTextOutW_OLD;
extern PolyTextOutA_FUNC PolyTextOutA_OLD;
extern PolyTextOutW_FUNC PolyTextOutW_OLD;
extern DPtoLP_FUNC DPtoLP_OLD;
extern LPtoDP_FUNC LPtoDP_OLD;
extern Polygon_FUNC Polygon_OLD;
extern Polyline_FUNC Polyline_OLD;
extern PolyBezier_FUNC PolyBezier_OLD;
extern PolyBezierTo_FUNC PolyBezierTo_OLD;
extern PolylineTo_FUNC PolylineTo_OLD;
extern SetViewportExtEx_FUNC SetViewportExtEx_OLD;
extern SetViewportOrgEx_FUNC SetViewportOrgEx_OLD;
extern SetWindowExtEx_FUNC SetWindowExtEx_OLD;
extern SetWindowOrgEx_FUNC SetWindowOrgEx_OLD;
extern OffsetViewportOrgEx_FUNC OffsetViewportOrgEx_OLD;
extern OffsetWindowOrgEx_FUNC OffsetWindowOrgEx_OLD;
extern ScaleViewportExtEx_FUNC ScaleViewportExtEx_OLD;
extern ScaleWindowExtEx_FUNC ScaleWindowExtEx_OLD;
extern SetBrushOrgEx_FUNC SetBrushOrgEx_OLD;
extern GetTextFaceA_FUNC GetTextFaceA_OLD;
extern GetTextFaceW_FUNC GetTextFaceW_OLD;
extern GetKerningPairsA_FUNC GetKerningPairsA_OLD;
extern GetKerningPairsW_FUNC GetKerningPairsW_OLD;
extern GetDCOrgEx_FUNC GetDCOrgEx_OLD;
extern FixBrushOrgEx_FUNC FixBrushOrgEx_OLD;
extern SetICMMode_FUNC SetICMMode_OLD;
extern CheckColorsInGamut_FUNC CheckColorsInGamut_OLD;
extern GetColorSpace_FUNC GetColorSpace_OLD;
extern SetColorSpace_FUNC SetColorSpace_OLD;
extern GetICMProfileA_FUNC GetICMProfileA_OLD;
extern GetICMProfileW_FUNC GetICMProfileW_OLD;
extern SetICMProfileA_FUNC SetICMProfileA_OLD;
extern SetICMProfileW_FUNC SetICMProfileW_OLD;
extern GetDeviceGammaRamp_FUNC GetDeviceGammaRamp_OLD;
extern SetDeviceGammaRamp_FUNC SetDeviceGammaRamp_OLD;
extern ColorMatchToTarget_FUNC ColorMatchToTarget_OLD;
extern EnumICMProfilesA_FUNC EnumICMProfilesA_OLD;
extern EnumICMProfilesW_FUNC EnumICMProfilesW_OLD;
extern ColorCorrectPalette_FUNC ColorCorrectPalette_OLD;
extern wglCreateContext_FUNC wglCreateContext_OLD;
extern wglCreateLayerContext_FUNC wglCreateLayerContext_OLD;
extern wglMakeCurrent_FUNC wglMakeCurrent_OLD;
extern wglUseFontBitmapsA_FUNC wglUseFontBitmapsA_OLD;
extern wglUseFontBitmapsW_FUNC wglUseFontBitmapsW_OLD;
extern SwapBuffers_FUNC SwapBuffers_OLD;
extern wglUseFontOutlinesA_FUNC wglUseFontOutlinesA_OLD;
extern wglUseFontOutlinesW_FUNC wglUseFontOutlinesW_OLD;
extern wglDescribeLayerPlane_FUNC wglDescribeLayerPlane_OLD;
extern wglSetLayerPaletteEntries_FUNC wglSetLayerPaletteEntries_OLD;
extern wglGetLayerPaletteEntries_FUNC wglGetLayerPaletteEntries_OLD;
extern wglRealizeLayerPalette_FUNC wglRealizeLayerPalette_OLD;
extern wglSwapLayerBuffers_FUNC wglSwapLayerBuffers_OLD;
//from User32:
extern DrawEdge_FUNC DrawEdge_OLD;
extern DrawFrameControl_FUNC DrawFrameControl_OLD;
extern DrawCaption_FUNC DrawCaption_OLD;
extern PrintWindow_FUNC PrintWindow_OLD;
extern DrawIcon_FUNC DrawIcon_OLD;
extern DrawTextA_FUNC DrawTextA_OLD;
extern DrawTextW_FUNC DrawTextW_OLD;
extern DrawTextExA_FUNC DrawTextExA_OLD;
extern DrawTextExW_FUNC DrawTextExW_OLD;
extern GrayStringA_FUNC GrayStringA_OLD;
extern GrayStringW_FUNC GrayStringW_OLD;
extern DrawStateA_FUNC DrawStateA_OLD;
extern DrawStateW_FUNC DrawStateW_OLD;
extern TabbedTextOutA_FUNC TabbedTextOutA_OLD;
extern TabbedTextOutW_FUNC TabbedTextOutW_OLD;
extern GetTabbedTextExtentA_FUNC GetTabbedTextExtentA_OLD;
extern GetTabbedTextExtentW_FUNC GetTabbedTextExtentW_OLD;
extern PaintDesktop_FUNC PaintDesktop_OLD;
extern ExcludeUpdateRgn_FUNC ExcludeUpdateRgn_OLD;
extern ScrollDC_FUNC ScrollDC_OLD;
extern DrawFocusRect_FUNC DrawFocusRect_OLD;
extern FillRect_FUNC FillRect_OLD;
extern FrameRect_FUNC FrameRect_OLD;
extern InvertRect_FUNC InvertRect_OLD;
extern DrawIconEx_FUNC DrawIconEx_OLD;

//Replacement Functions (Declarations)
BOOL WINAPI Arc_Replacement(HDC hdc, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
BOOL WINAPI BitBlt_Replacement(HDC hdc, int x, int y, int cx, int cy, HDC hdcSrc, int x1, int y1, DWORD rop);
BOOL WINAPI CancelDC_Replacement(HDC hdc);
BOOL WINAPI Chord_Replacement(HDC hdc, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
int WINAPI ChoosePixelFormat_Replacement(HDC hdc, CONST PIXELFORMATDESCRIPTOR* ppfd);
HMETAFILE WINAPI CloseMetaFile_Replacement(HDC hdc);
HBITMAP WINAPI CreateCompatibleBitmap_Replacement(HDC hdc, int cx, int cy);
HBITMAP WINAPI CreateDiscardableBitmap_Replacement(HDC hdc, int cx, int cy);
HDC WINAPI CreateCompatibleDC_Replacement(HDC hdc);
HBITMAP WINAPI CreateDIBitmap_Replacement(HDC hdc, CONST BITMAPINFOHEADER* pbmih, DWORD flInit, CONST VOID* pjBits, CONST BITMAPINFO* pbmi, UINT iUsage);
BOOL WINAPI DeleteDC_Replacement(HDC hdc);
int WINAPI DescribePixelFormat_Replacement(HDC hdc, int iPixelFormat, UINT nBytes, LPPIXELFORMATDESCRIPTOR ppfd);
int WINAPI DrawEscape_Replacement(HDC hdc, int iEscape, int cjIn, LPCSTR lpIn);
BOOL WINAPI Ellipse_Replacement(HDC hdc, int left, int top, int right, int bottom);
int WINAPI EnumFontFamiliesExA_Replacement(HDC hdc, LPLOGFONTA lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam, DWORD dwFlags);
int WINAPI EnumFontFamiliesExW_Replacement(HDC hdc, LPLOGFONTW lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam, DWORD dwFlags);
int WINAPI EnumFontFamiliesA_Replacement(HDC hdc, LPCSTR lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam);
int WINAPI EnumFontFamiliesW_Replacement(HDC hdc, LPCWSTR lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam);
int WINAPI EnumFontsA_Replacement(HDC hdc, LPCSTR lpLogfont, FONTENUMPROCA lpProc, LPARAM lParam);
int WINAPI EnumFontsW_Replacement(HDC hdc, LPCWSTR lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam);
int WINAPI EnumObjects_Replacement(HDC hdc, int nType, GOBJENUMPROC lpFunc, LPARAM lParam);
int WINAPI Escape_Replacement(HDC hdc, int iEscape, int cjIn, LPCSTR pvIn, LPVOID pvOut);
int WINAPI ExtEscape_Replacement(HDC hdc, int iEscape, int cjInput, LPCSTR lpInData, int cjOutput, LPSTR lpOutData);
int WINAPI ExcludeClipRect_Replacement(HDC hdc, int left, int top, int right, int bottom);
BOOL WINAPI ExtFloodFill_Replacement(HDC hdc, int x, int y, COLORREF color, UINT type);
BOOL WINAPI FillRgn_Replacement(HDC hdc, HRGN hrgn, HBRUSH hbr);
BOOL WINAPI FloodFill_Replacement(HDC hdc, int x, int y, COLORREF color);
int WINAPI GetROP2_Replacement(HDC hdc);
BOOL WINAPI GetAspectRatioFilterEx_Replacement(HDC hdc, LPSIZE lpsize);
COLORREF WINAPI GetBkColor_Replacement(HDC hdc);
COLORREF WINAPI GetDCBrushColor_Replacement(HDC hdc);
COLORREF WINAPI GetDCPenColor_Replacement(HDC hdc);
int WINAPI GetBkMode_Replacement(HDC hdc);
UINT WINAPI GetBoundsRect_Replacement(HDC hdc, LPRECT lprect, UINT flags);
BOOL WINAPI GetBrushOrgEx_Replacement(HDC hdc, LPPOINT lppt);
BOOL WINAPI GetCharWidthA_Replacement(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL WINAPI GetCharWidthW_Replacement(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL WINAPI GetCharWidth32A_Replacement(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL WINAPI GetCharWidth32W_Replacement(HDC hdc, UINT iFirst, UINT iLast, LPINT lpBuffer);
BOOL APIENTRY GetCharWidthFloatA_Replacement(HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer);
BOOL APIENTRY GetCharWidthFloatW_Replacement(HDC hdc, UINT iFirst, UINT iLast, PFLOAT lpBuffer);
BOOL APIENTRY GetCharABCWidthsA_Replacement(HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC);
BOOL APIENTRY GetCharABCWidthsW_Replacement(HDC hdc, UINT wFirst, UINT wLast, LPABC lpABC);
BOOL APIENTRY GetCharABCWidthsFloatA_Replacement(HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC);
BOOL APIENTRY GetCharABCWidthsFloatW_Replacement(HDC hdc, UINT iFirst, UINT iLast, LPABCFLOAT lpABC);
int WINAPI GetClipBox_Replacement(HDC hdc, LPRECT lprect);
int WINAPI GetClipRgn_Replacement(HDC hdc, HRGN hrgn);
int WINAPI GetMetaRgn_Replacement(HDC hdc, HRGN hrgn);
HGDIOBJ WINAPI GetCurrentObject_Replacement(HDC hdc, UINT type);
BOOL WINAPI GetCurrentPositionEx_Replacement(HDC hdc, LPPOINT lppt);
int WINAPI GetDeviceCaps_Replacement(HDC hdc, int index);
int WINAPI GetDIBits_Replacement(HDC hdc, HBITMAP hbm, UINT start, UINT cLines, LPVOID lpvBits, LPBITMAPINFO lpbmi, UINT usage);
DWORD WINAPI GetFontData_Replacement(HDC hdc, DWORD dwTable, DWORD dwOffset, PVOID pvBuffer, DWORD cjBuffer);
DWORD WINAPI GetGlyphOutlineA_Replacement(HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, CONST MAT2* lpmat2);
DWORD WINAPI GetGlyphOutlineW_Replacement(HDC hdc, UINT uChar, UINT fuFormat, LPGLYPHMETRICS lpgm, DWORD cjBuffer, LPVOID pvBuffer, CONST MAT2* lpmat2);
int WINAPI GetGraphicsMode_Replacement(HDC hdc);
int WINAPI GetMapMode_Replacement(HDC hdc);
COLORREF WINAPI GetNearestColor_Replacement(HDC hdc, COLORREF color);
UINT APIENTRY GetOutlineTextMetricsA_Replacement(HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICA potm);
UINT APIENTRY GetOutlineTextMetricsW_Replacement(HDC hdc, UINT cjCopy, LPOUTLINETEXTMETRICW potm);
COLORREF WINAPI GetPixel_Replacement(HDC hdc, int x, int y);
int WINAPI GetPixelFormat_Replacement(HDC hdc);
int WINAPI GetPolyFillMode_Replacement(HDC hdc);
int WINAPI GetRandomRgn_Replacement(HDC hdc, HRGN hrgn, INT i);
int WINAPI GetStretchBltMode_Replacement(HDC hdc);
UINT WINAPI GetSystemPaletteEntries_Replacement(HDC hdc, UINT iStart, UINT cEntries, LPPALETTEENTRY pPalEntries);
UINT WINAPI GetSystemPaletteUse_Replacement(HDC hdc);
int WINAPI GetTextCharacterExtra_Replacement(HDC hdc);
UINT WINAPI GetTextAlign_Replacement(HDC hdc);
COLORREF WINAPI GetTextColor_Replacement(HDC hdc);
BOOL APIENTRY GetTextExtentPointA_Replacement(HDC hdc, LPCSTR lpString, int c, LPSIZE lpsz);
BOOL APIENTRY GetTextExtentPointW_Replacement(HDC hdc, LPCWSTR lpString, int c, LPSIZE lpsz);
BOOL APIENTRY GetTextExtentPoint32A_Replacement(HDC hdc, LPCSTR lpString, int c, LPSIZE psizl);
BOOL APIENTRY GetTextExtentPoint32W_Replacement(HDC hdc, LPCWSTR lpString, int c, LPSIZE psizl);
BOOL APIENTRY GetTextExtentExPointA_Replacement(HDC hdc, LPCSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
BOOL APIENTRY GetTextExtentExPointW_Replacement(HDC hdc, LPCWSTR lpszString, int cchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
int WINAPI GetTextCharset_Replacement(HDC hdc);
int WINAPI GetTextCharsetInfo_Replacement(HDC hdc, LPFONTSIGNATURE lpSig, DWORD dwFlags);
DWORD WINAPI GetFontLanguageInfo_Replacement(HDC hdc);
DWORD WINAPI GetCharacterPlacementA_Replacement(HDC hdc, LPCSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSA lpResults, DWORD dwFlags);
DWORD WINAPI GetCharacterPlacementW_Replacement(HDC hdc, LPCWSTR lpString, int nCount, int nMexExtent, LPGCP_RESULTSW lpResults, DWORD dwFlags);
DWORD WINAPI GetFontUnicodeRanges_Replacement(HDC hdc, LPGLYPHSET lpgs);
DWORD WINAPI GetGlyphIndicesA_Replacement(HDC hdc, LPCSTR lpstr, int c, LPWORD pgi, DWORD fl);
DWORD WINAPI GetGlyphIndicesW_Replacement(HDC hdc, LPCWSTR lpstr, int c, LPWORD pgi, DWORD fl);
BOOL WINAPI GetTextExtentExPointI_Replacement(HDC hdc, LPWORD lpwszString, int cwchString, int nMaxExtent, LPINT lpnFit, LPINT lpnDx, LPSIZE lpSize);
BOOL WINAPI GetViewportExtEx_Replacement(HDC hdc, LPSIZE lpsize);
BOOL WINAPI GetViewportOrgEx_Replacement(HDC hdc, LPPOINT lppoint);
BOOL WINAPI GetWindowExtEx_Replacement(HDC hdc, LPSIZE lpsize);
BOOL WINAPI GetWindowOrgEx_Replacement(HDC hdc, LPPOINT lppoint);
int WINAPI IntersectClipRect_Replacement(HDC hdc, int left, int top, int right, int bottom);
BOOL WINAPI InvertRgn_Replacement(HDC hdc, HRGN hrgn);
BOOL WINAPI LineTo_Replacement(HDC hdc, int x, int y);
BOOL WINAPI MaskBlt_Replacement(HDC hdcDest, int xDest, int yDest, int width, int height, HDC hdcSrc, int xSrc, int ySrc, HBITMAP hbmMask, int xMask, int yMask, DWORD rop);
BOOL WINAPI PlgBlt_Replacement(HDC hdcDest, CONST POINT* lpPoint, HDC hdcSrc, int xSrc, int ySrc, int width, int height, HBITMAP hbmMask, int xMask, int yMask);
int WINAPI OffsetClipRgn_Replacement(HDC hdc, int x, int y);
BOOL WINAPI PatBlt_Replacement(HDC hdc, int x, int y, int w, int h, DWORD rop);
BOOL WINAPI Pie_Replacement(HDC hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2);
BOOL WINAPI PlayMetaFile_Replacement(HDC hdc, HMETAFILE hmf);
BOOL WINAPI PaintRgn_Replacement(HDC hdc, HRGN hrgn);
BOOL WINAPI PolyPolygon_Replacement(HDC hdc, CONST POINT* apt, CONST INT* asz, int csz);
BOOL WINAPI PtVisible_Replacement(HDC hdc, int x, int y);
BOOL WINAPI RectVisible_Replacement(HDC hdc, CONST RECT* lprect);
BOOL WINAPI Rectangle_Replacement(HDC hdc, int left, int top, int right, int bottom);
BOOL WINAPI RestoreDC_Replacement(HDC hdc, int nSavedDC);
HDC WINAPI ResetDCA_Replacement(HDC hdc, CONST DEVMODEA* lpdm);
HDC WINAPI ResetDCW_Replacement(HDC hdc, CONST DEVMODEW* lpdm);
UINT WINAPI RealizePalette_Replacement(HDC hdc);
BOOL WINAPI RoundRect_Replacement(HDC hdc, int left, int top, int right, int bottom, int width, int height);
int WINAPI SaveDC_Replacement(HDC hdc);
int WINAPI SelectClipRgn_Replacement(HDC hdc, HRGN hrgn);
int WINAPI ExtSelectClipRgn_Replacement(HDC hdc, HRGN hrgn, int mode);
int WINAPI SetMetaRgn_Replacement(HDC hdc);
HGDIOBJ WINAPI SelectObject_Replacement(HDC hdc, HGDIOBJ h);
HPALETTE WINAPI SelectPalette_Replacement(HDC hdc, HPALETTE hPal, BOOL bForceBkgd);
COLORREF WINAPI SetBkColor_Replacement(HDC hdc, COLORREF color);
COLORREF WINAPI SetDCBrushColor_Replacement(HDC hdc, COLORREF color);
COLORREF WINAPI SetDCPenColor_Replacement(HDC hdc, COLORREF color);
int WINAPI SetBkMode_Replacement(HDC hdc, int mode);
UINT WINAPI SetBoundsRect_Replacement(HDC hdc, CONST RECT* lprect, UINT flags);
int WINAPI SetDIBits_Replacement(HDC hdc, HBITMAP hbm, UINT start, UINT cLines, CONST VOID* lpBits, CONST BITMAPINFO* lpbmi, UINT ColorUse);
int WINAPI SetDIBitsToDevice_Replacement(HDC hdc, int xDest, int yDest, DWORD w, DWORD h, int xSrc, int ySrc, UINT StartScan, UINT cLines, CONST VOID* lpvBits, CONST BITMAPINFO* lpbmi, UINT ColorUse);
DWORD WINAPI SetMapperFlags_Replacement(HDC hdc, DWORD flags);
int WINAPI SetGraphicsMode_Replacement(HDC hdc, int iMode);
int WINAPI SetMapMode_Replacement(HDC hdc, int iMode);
DWORD WINAPI SetLayout_Replacement(HDC hdc, DWORD l);
DWORD WINAPI GetLayout_Replacement(HDC hdc);
COLORREF WINAPI SetPixel_Replacement(HDC hdc, int x, int y, COLORREF color);
BOOL WINAPI SetPixelV_Replacement(HDC hdc, int x, int y, COLORREF color);
BOOL WINAPI SetPixelFormat_Replacement(HDC hdc, int format, CONST PIXELFORMATDESCRIPTOR* ppfd);
int WINAPI SetPolyFillMode_Replacement(HDC hdc, int mode);
BOOL WINAPI StretchBlt_Replacement(HDC hdcDest, int xDest, int yDest, int wDest, int hDest, HDC hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, DWORD rop);
int WINAPI StretchDIBits_Replacement(HDC hdc, int xDest, int yDest, int DestWidth, int DestHeight, int xSrc, int ySrc, int SrcWidth, int SrcHeight, CONST VOID* lpBits, CONST BITMAPINFO* lpbmi, UINT iUsage, DWORD rop);
int WINAPI SetROP2_Replacement(HDC hdc, int rop2);
int WINAPI SetStretchBltMode_Replacement(HDC hdc, int mode);
UINT WINAPI SetSystemPaletteUse_Replacement(HDC hdc, UINT use);
int WINAPI SetTextCharacterExtra_Replacement(HDC hdc, int extra);
COLORREF WINAPI SetTextColor_Replacement(HDC hdc, COLORREF color);
UINT WINAPI SetTextAlign_Replacement(HDC hdc, UINT align);
BOOL WINAPI SetTextJustification_Replacement(HDC hdc, int extra, int count);
BOOL WINAPI UpdateColors_Replacement(HDC hdc);
BOOL WINAPI AlphaBlend_Replacement(HDC hdcDest, int xoriginDest, int yoriginDest, int wDest, int hDest, HDC hdcSrc, int xoriginSrc, int yoriginSrc, int wSrc, int hSrc, BLENDFUNCTION ftn);
BOOL WINAPI TransparentBlt_Replacement(HDC hdcDest, int xoriginDest, int yoriginDest, int wDest, int hDest, HDC hdcSrc, int xoriginSrc, int yoriginSrc, int wSrc, int hSrc, UINT crTransparent);
BOOL WINAPI GradientFill_Replacement(HDC hdc, PTRIVERTEX pVertex, ULONG nVertex, PVOID pMesh, ULONG nMesh, ULONG ulMode);
BOOL WINAPI PlayMetaFileRecord_Replacement(HDC hdc, LPHANDLETABLE lpHandleTable, LPMETARECORD lpMR, UINT noObjs);
BOOL WINAPI EnumMetaFile_Replacement(HDC hdc, HMETAFILE hmf, MFENUMPROC proc, LPARAM param);
HENHMETAFILE WINAPI CloseEnhMetaFile_Replacement(HDC hdc);
HDC WINAPI CreateEnhMetaFileA_Replacement(HDC hdc, LPCSTR lpFilename, CONST RECT* lprc, LPCSTR lpDesc);
HDC WINAPI CreateEnhMetaFileW_Replacement(HDC hdc, LPCWSTR lpFilename, CONST RECT* lprc, LPCWSTR lpDesc);
BOOL WINAPI EnumEnhMetaFile_Replacement(HDC hdc, HENHMETAFILE hmf, ENHMFENUMPROC proc, LPVOID param, CONST RECT* lpRect);
UINT WINAPI GetWinMetaFileBits_Replacement(HENHMETAFILE hemf, UINT cbData16, LPBYTE pData16, INT iMapMode, HDC hdcRef);
BOOL WINAPI PlayEnhMetaFile_Replacement(HDC hdc, HENHMETAFILE hmf, CONST RECT* lprect);
BOOL WINAPI PlayEnhMetaFileRecord_Replacement(HDC hdc, LPHANDLETABLE pht, CONST ENHMETARECORD* pmr, UINT cht);
HENHMETAFILE WINAPI SetWinMetaFileBits_Replacement(UINT nSize, CONST BYTE* lpMeta16Data, HDC hdcRef, CONST METAFILEPICT* lpMFP);
BOOL WINAPI GdiComment_Replacement(HDC hdc, UINT nSize, CONST BYTE* lpData);
BOOL WINAPI GetTextMetricsA_Replacement(HDC hdc, LPTEXTMETRICA lptm);
BOOL WINAPI GetTextMetricsW_Replacement(HDC hdc, LPTEXTMETRICW lptm);
BOOL WINAPI AngleArc_Replacement(HDC hdc, int x, int y, DWORD r, FLOAT StartAngle, FLOAT SweepAngle);
BOOL WINAPI PolyPolyline_Replacement(HDC hdc, CONST POINT* apt, CONST DWORD* asz, DWORD csz);
BOOL WINAPI GetWorldTransform_Replacement(HDC hdc, LPXFORM lpxf);
BOOL WINAPI SetWorldTransform_Replacement(HDC hdc, CONST XFORM* lpxf);
BOOL WINAPI ModifyWorldTransform_Replacement(HDC hdc, CONST XFORM* lpxf, DWORD mode);
HBITMAP WINAPI CreateDIBSection_Replacement(HDC hdc, CONST BITMAPINFO* pbmi, UINT usage, VOID** ppvBits, HANDLE hSection, DWORD offset);
UINT WINAPI GetDIBColorTable_Replacement(HDC hdc, UINT iStart, UINT cEntries, RGBQUAD* prgbq);
UINT WINAPI SetDIBColorTable_Replacement(HDC hdc, UINT iStart, UINT cEntries, CONST RGBQUAD* prgbq);
BOOL WINAPI SetColorAdjustment_Replacement(HDC hdc, CONST COLORADJUSTMENT* lpca);
BOOL WINAPI GetColorAdjustment_Replacement(HDC hdc, LPCOLORADJUSTMENT lpca);
HPALETTE WINAPI CreateHalftonePalette_Replacement(HDC hdc);
int WINAPI StartDocA_Replacement(HDC hdc, CONST DOCINFOA* lpdi);
int WINAPI StartDocW_Replacement(HDC hdc, CONST DOCINFOW* lpdi);
int WINAPI EndDoc_Replacement(HDC hdc);
int WINAPI StartPage_Replacement(HDC hdc);
int WINAPI EndPage_Replacement(HDC hdc);
int WINAPI AbortDoc_Replacement(HDC hdc);
int WINAPI SetAbortProc_Replacement(HDC hdc, ABORTPROC proc);
BOOL WINAPI AbortPath_Replacement(HDC hdc);
BOOL WINAPI ArcTo_Replacement(HDC hdc, int left, int top, int right, int bottom, int xr1, int yr1, int xr2, int yr2);
BOOL WINAPI BeginPath_Replacement(HDC hdc);
BOOL WINAPI CloseFigure_Replacement(HDC hdc);
BOOL WINAPI EndPath_Replacement(HDC hdc);
BOOL WINAPI FillPath_Replacement(HDC hdc);
BOOL WINAPI FlattenPath_Replacement(HDC hdc);
int WINAPI GetPath_Replacement(HDC hdc, LPPOINT apt, LPBYTE aj, int cpt);
HRGN WINAPI PathToRegion_Replacement(HDC hdc);
BOOL WINAPI PolyDraw_Replacement(HDC hdc, CONST POINT* apt, CONST BYTE* aj, int cpt);
BOOL WINAPI SelectClipPath_Replacement(HDC hdc, int mode);
int WINAPI SetArcDirection_Replacement(HDC hdc, int dir);
BOOL WINAPI SetMiterLimit_Replacement(HDC hdc, FLOAT limit, PFLOAT old);
BOOL WINAPI StrokeAndFillPath_Replacement(HDC hdc);
BOOL WINAPI StrokePath_Replacement(HDC hdc);
BOOL WINAPI WidenPath_Replacement(HDC hdc);
BOOL WINAPI GetMiterLimit_Replacement(HDC hdc, PFLOAT plimit);
int WINAPI GetArcDirection_Replacement(HDC hdc);
BOOL WINAPI MoveToEx_Replacement(HDC hdc, int x, int y, LPPOINT lppt);
BOOL WINAPI TextOutA_Replacement(HDC hdc, int x, int y, LPCSTR lpString, int c);
BOOL WINAPI TextOutW_Replacement(HDC hdc, int x, int y, LPCWSTR lpString, int c);
BOOL WINAPI ExtTextOutA_Replacement(HDC hdc, int x, int y, UINT options, CONST RECT* lprect, LPCSTR lpString, UINT c, CONST INT* lpDx);
BOOL WINAPI ExtTextOutW_Replacement(HDC hdc, int x, int y, UINT options, CONST RECT* lprect, LPCWSTR lpString, UINT c, CONST INT* lpDx);
BOOL WINAPI PolyTextOutA_Replacement(HDC hdc, CONST POLYTEXTA* ppt, int nstrings);
BOOL WINAPI PolyTextOutW_Replacement(HDC hdc, CONST POLYTEXTW* ppt, int nstrings);
BOOL WINAPI DPtoLP_Replacement(HDC hdc, LPPOINT lppt, int c);
BOOL WINAPI LPtoDP_Replacement(HDC hdc, LPPOINT lppt, int c);
BOOL WINAPI Polygon_Replacement(HDC hdc, CONST POINT* apt, int cpt);
BOOL WINAPI Polyline_Replacement(HDC hdc, CONST POINT* apt, int cpt);
BOOL WINAPI PolyBezier_Replacement(HDC hdc, CONST POINT* apt, DWORD cpt);
BOOL WINAPI PolyBezierTo_Replacement(HDC hdc, CONST POINT* apt, DWORD cpt);
BOOL WINAPI PolylineTo_Replacement(HDC hdc, CONST POINT* apt, DWORD cpt);
BOOL WINAPI SetViewportExtEx_Replacement(HDC hdc, int x, int y, LPSIZE lpsz);
BOOL WINAPI SetViewportOrgEx_Replacement(HDC hdc, int x, int y, LPPOINT lppt);
BOOL WINAPI SetWindowExtEx_Replacement(HDC hdc, int x, int y, LPSIZE lpsz);
BOOL WINAPI SetWindowOrgEx_Replacement(HDC hdc, int x, int y, LPPOINT lppt);
BOOL WINAPI OffsetViewportOrgEx_Replacement(HDC hdc, int x, int y, LPPOINT lppt);
BOOL WINAPI OffsetWindowOrgEx_Replacement(HDC hdc, int x, int y, LPPOINT lppt);
BOOL WINAPI ScaleViewportExtEx_Replacement(HDC hdc, int xn, int dx, int yn, int yd, LPSIZE lpsz);
BOOL WINAPI ScaleWindowExtEx_Replacement(HDC hdc, int xn, int xd, int yn, int yd, LPSIZE lpsz);
BOOL WINAPI SetBrushOrgEx_Replacement(HDC hdc, int x, int y, LPPOINT lppt);
int WINAPI GetTextFaceA_Replacement(HDC hdc, int c, LPSTR lpName);
int WINAPI GetTextFaceW_Replacement(HDC hdc, int c, LPWSTR lpName);
DWORD WINAPI GetKerningPairsA_Replacement(HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair);
DWORD WINAPI GetKerningPairsW_Replacement(HDC hdc, DWORD nPairs, LPKERNINGPAIR lpKernPair);
BOOL WINAPI GetDCOrgEx_Replacement(HDC hdc, LPPOINT lppt);
BOOL WINAPI FixBrushOrgEx_Replacement(HDC hdc, int x, int y, LPPOINT ptl);
int WINAPI SetICMMode_Replacement(HDC hdc, int mode);
BOOL WINAPI CheckColorsInGamut_Replacement(HDC hdc, LPRGBTRIPLE lpRGBTriple, LPVOID dlpBuffer, DWORD nCount);
HCOLORSPACE WINAPI GetColorSpace_Replacement(HDC hdc);
HCOLORSPACE WINAPI SetColorSpace_Replacement(HDC hdc, HCOLORSPACE hcs);
BOOL WINAPI GetICMProfileA_Replacement(HDC hdc, LPDWORD pBufSize, LPSTR pszFilename);
BOOL WINAPI GetICMProfileW_Replacement(HDC hdc, LPDWORD pBufSize, LPWSTR pszFilename);
BOOL WINAPI SetICMProfileA_Replacement(HDC hdc, LPSTR lpFileName);
BOOL WINAPI SetICMProfileW_Replacement(HDC hdc, LPWSTR lpFileName);
BOOL WINAPI GetDeviceGammaRamp_Replacement(HDC hdc, LPVOID lpRamp);
BOOL WINAPI SetDeviceGammaRamp_Replacement(HDC hdc, LPVOID lpRamp);
BOOL WINAPI ColorMatchToTarget_Replacement(HDC hdc, HDC hdcTarget, DWORD action);
int WINAPI EnumICMProfilesA_Replacement(HDC hdc, ICMENUMPROCA proc, LPARAM param);
int WINAPI EnumICMProfilesW_Replacement(HDC hdc, ICMENUMPROCW proc, LPARAM param);
BOOL WINAPI ColorCorrectPalette_Replacement(HDC hdc, HPALETTE hPal, DWORD deFirst, DWORD num);
HGLRC WINAPI wglCreateContext_Replacement(HDC hdc);
HGLRC WINAPI wglCreateLayerContext_Replacement(HDC hdc, int _arg2);
BOOL WINAPI wglMakeCurrent_Replacement(HDC hdc, HGLRC _arg2);
BOOL WINAPI wglUseFontBitmapsA_Replacement(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4);
BOOL WINAPI wglUseFontBitmapsW_Replacement(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4);
BOOL WINAPI SwapBuffers_Replacement(HDC hdc);
BOOL WINAPI wglUseFontOutlinesA_Replacement(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4, FLOAT _arg5, FLOAT _arg6, int _arg7, LPGLYPHMETRICSFLOAT _arg8);
BOOL WINAPI wglUseFontOutlinesW_Replacement(HDC hdc, DWORD _arg2, DWORD _arg3, DWORD _arg4, FLOAT _arg5, FLOAT _arg6, int _arg7, LPGLYPHMETRICSFLOAT _arg8);
BOOL WINAPI wglDescribeLayerPlane_Replacement(HDC hdc, int _arg2, int _arg3, UINT _arg4, LPLAYERPLANEDESCRIPTOR _arg5);
int WINAPI wglSetLayerPaletteEntries_Replacement(HDC hdc, int _arg2, int _arg3, int _arg4, CONST COLORREF* _arg5);
int WINAPI wglGetLayerPaletteEntries_Replacement(HDC hdc, int _arg2, int _arg3, int _arg4, COLORREF*);
BOOL WINAPI wglRealizeLayerPalette_Replacement(HDC hdc, int _arg2, BOOL _arg3);
BOOL WINAPI wglSwapLayerBuffers_Replacement(HDC hdc, UINT _arg2);
//from User32
BOOL WINAPI DrawEdge_Replacement(HDC hdc, LPRECT qrc, UINT edge, UINT grfFlags);
BOOL WINAPI DrawFrameControl_Replacement(HDC hdc, LPRECT _arg2, UINT _arg3, UINT _arg4);
BOOL WINAPI DrawCaption_Replacement(HWND hwnd, HDC hdc, CONST RECT* lprect, UINT flags);
BOOL WINAPI PrintWindow_Replacement(HWND hwnd, HDC hdcBlt, UINT nFlags);
BOOL WINAPI DrawIcon_Replacement(HDC hDC, int X, int Y, HICON hIcon);
int WINAPI DrawTextA_Replacement(HDC hdc, LPCSTR lpchText, int cchText, LPRECT lprc, UINT format);
int WINAPI DrawTextW_Replacement(HDC hdc, LPCWSTR lpchText, int cchText, LPRECT lprc, UINT format);
int WINAPI DrawTextExA_Replacement(HDC hdc, LPSTR lpchText, int cchText, LPRECT lprc, UINT format, LPDRAWTEXTPARAMS lpdtp);
int WINAPI DrawTextExW_Replacement(HDC hdc, LPWSTR lpchText, int cchText, LPRECT lprc, UINT format, LPDRAWTEXTPARAMS lpdtp);
BOOL WINAPI GrayStringA_Replacement(HDC hDC, HBRUSH hBrush, GRAYSTRINGPROC lpOutputFunc, LPARAM lpData, int nCount, int X, int Y, int nWidth, int nHeight);
BOOL WINAPI GrayStringW_Replacement(HDC hDC, HBRUSH hBrush, GRAYSTRINGPROC lpOutputFunc, LPARAM lpData, int nCount, int X, int Y, int nWidth, int nHeight);
BOOL WINAPI DrawStateA_Replacement(HDC hdc, HBRUSH hbrFore, DRAWSTATEPROC qfnCallBack, LPARAM lData, WPARAM wData, int x, int y, int cx, int cy, UINT uFlags);
BOOL WINAPI DrawStateW_Replacement(HDC hdc, HBRUSH hbrFore, DRAWSTATEPROC qfnCallBack, LPARAM lData, WPARAM wData, int x, int y, int cx, int cy, UINT uFlags);
LONG WINAPI TabbedTextOutA_Replacement(HDC hdc, int x, int y, LPCSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions, int nTabOrigin);
LONG WINAPI TabbedTextOutW_Replacement(HDC hdc, int x, int y, LPCWSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions, int nTabOrigin);
DWORD WINAPI GetTabbedTextExtentA_Replacement(HDC hdc, LPCSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions);
DWORD WINAPI GetTabbedTextExtentW_Replacement(HDC hdc, LPCWSTR lpString, int chCount, int nTabPositions, CONST INT* lpnTabStopPositions);
BOOL WINAPI PaintDesktop_Replacement(HDC hdc);
int WINAPI ExcludeUpdateRgn_Replacement(HDC hDC, HWND hWnd);
BOOL WINAPI ScrollDC_Replacement(HDC hDC, int dx, int dy, CONST RECT* lprcScroll, CONST RECT* lprcClip, HRGN hrgnUpdate, LPRECT lprcUpdate);
BOOL WINAPI DrawFocusRect_Replacement(HDC hDC, CONST RECT* lprc);
int WINAPI FillRect_Replacement(HDC hDC, CONST RECT* lprc, HBRUSH hbr);
int WINAPI FrameRect_Replacement(HDC hDC, CONST RECT* lprc, HBRUSH hbr);
BOOL WINAPI InvertRect_Replacement(HDC hDC, CONST RECT* lprc);
BOOL WINAPI DrawIconEx_Replacement(HDC hdc, int xLeft, int yTop, HICON hIcon, int cxWidth, int cyWidth, UINT istepIfAniCur, HBRUSH hbrFlickerFreeDraw, UINT diFlags);
